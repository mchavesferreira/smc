
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004e  00800100  00000c50  00000d04  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c50  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000009  0080014e  0080014e  00000d52  2**0
                  ALLOC
  3 .eeprom       00000009  00810000  00810000  00000d52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000030  00000000  00000000  00000d5b  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d8c  2**2
                  CONTENTS, READONLY
  6 .debug_aranges 00000158  00000000  00000000  00000dd0  2**3
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000187e  00000000  00000000  00000f28  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000909  00000000  00000000  000027a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000b16  00000000  00000000  000030af  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000364  00000000  00000000  00003bc8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000066c  00000000  00000000  00003f2c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000f47  00000000  00000000  00004598  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000110  00000000  00000000  000054df  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c3 02 	jmp	0x586	; 0x586 <__ctors_end>
   4:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
   8:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
   c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  10:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  14:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  18:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  1c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  20:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  24:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  28:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  2c:	0c 94 f4 04 	jmp	0x9e8	; 0x9e8 <__vector_11>
  30:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  34:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  38:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  3c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  40:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  44:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  48:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  4c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  50:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  54:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  58:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  5c:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  60:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>
  64:	0c 94 e0 02 	jmp	0x5c0	; 0x5c0 <__bad_interrupt>

00000068 <__trampolines_end>:
	...
  70:	00 2f       	mov	r16, r16
  72:	00 00       	nop
  74:	00 00       	nop
  76:	07 00       	.word	0x0007	; ????
  78:	07 00       	.word	0x0007	; ????
  7a:	00 14       	cp	r0, r0
  7c:	7f 14       	cp	r7, r15
  7e:	7f 14       	cp	r7, r15
  80:	00 24       	eor	r0, r0
  82:	2a 7f       	andi	r18, 0xFA	; 250
  84:	2a 12       	cpse	r2, r26
  86:	00 62       	ori	r16, 0x20	; 32
  88:	64 08       	sbc	r6, r4
  8a:	13 23       	and	r17, r19
  8c:	00 36       	cpi	r16, 0x60	; 96
  8e:	49 55       	subi	r20, 0x59	; 89
  90:	22 50       	subi	r18, 0x02	; 2
  92:	00 00       	nop
  94:	05 03       	mulsu	r16, r21
  96:	00 00       	nop
  98:	00 00       	nop
  9a:	1c 22       	and	r1, r28
  9c:	41 00       	.word	0x0041	; ????
  9e:	00 00       	nop
  a0:	41 22       	and	r4, r17
  a2:	1c 00       	.word	0x001c	; ????
  a4:	00 14       	cp	r0, r0
  a6:	08 3e       	cpi	r16, 0xE8	; 232
  a8:	08 14       	cp	r0, r8
  aa:	00 08       	sbc	r0, r0
  ac:	08 3e       	cpi	r16, 0xE8	; 232
  ae:	08 08       	sbc	r0, r8
  b0:	00 00       	nop
  b2:	00 a0       	ldd	r0, Z+32	; 0x20
  b4:	60 00       	.word	0x0060	; ????
  b6:	00 08       	sbc	r0, r0
  b8:	08 08       	sbc	r0, r8
  ba:	08 08       	sbc	r0, r8
  bc:	00 00       	nop
  be:	60 60       	ori	r22, 0x00	; 0
  c0:	00 00       	nop
  c2:	00 20       	and	r0, r0
  c4:	10 08       	sbc	r1, r0
  c6:	04 02       	muls	r16, r20
  c8:	00 3e       	cpi	r16, 0xE0	; 224
  ca:	51 49       	sbci	r21, 0x91	; 145
  cc:	45 3e       	cpi	r20, 0xE5	; 229
  ce:	00 00       	nop
  d0:	42 7f       	andi	r20, 0xF2	; 242
  d2:	40 00       	.word	0x0040	; ????
  d4:	00 42       	sbci	r16, 0x20	; 32
  d6:	61 51       	subi	r22, 0x11	; 17
  d8:	49 46       	sbci	r20, 0x69	; 105
  da:	00 21       	and	r16, r0
  dc:	41 45       	sbci	r20, 0x51	; 81
  de:	4b 31       	cpi	r20, 0x1B	; 27
  e0:	00 18       	sub	r0, r0
  e2:	14 12       	cpse	r1, r20
  e4:	7f 10       	cpse	r7, r15
  e6:	00 27       	eor	r16, r16
  e8:	45 45       	sbci	r20, 0x55	; 85
  ea:	45 39       	cpi	r20, 0x95	; 149
  ec:	00 3c       	cpi	r16, 0xC0	; 192
  ee:	4a 49       	sbci	r20, 0x9A	; 154
  f0:	49 30       	cpi	r20, 0x09	; 9
  f2:	00 01       	movw	r0, r0
  f4:	71 09       	sbc	r23, r1
  f6:	05 03       	mulsu	r16, r21
  f8:	00 36       	cpi	r16, 0x60	; 96
  fa:	49 49       	sbci	r20, 0x99	; 153
  fc:	49 36       	cpi	r20, 0x69	; 105
  fe:	00 06       	cpc	r0, r16
 100:	49 49       	sbci	r20, 0x99	; 153
 102:	29 1e       	adc	r2, r25
 104:	00 00       	nop
 106:	36 36       	cpi	r19, 0x66	; 102
 108:	00 00       	nop
 10a:	00 00       	nop
 10c:	56 36       	cpi	r21, 0x66	; 102
 10e:	00 00       	nop
 110:	00 08       	sbc	r0, r0
 112:	14 22       	and	r1, r20
 114:	41 00       	.word	0x0041	; ????
 116:	00 14       	cp	r0, r0
 118:	14 14       	cp	r1, r4
 11a:	14 14       	cp	r1, r4
 11c:	00 00       	nop
 11e:	41 22       	and	r4, r17
 120:	14 08       	sbc	r1, r4
 122:	00 02       	muls	r16, r16
 124:	01 51       	subi	r16, 0x11	; 17
 126:	09 06       	cpc	r0, r25
 128:	00 32       	cpi	r16, 0x20	; 32
 12a:	49 59       	subi	r20, 0x99	; 153
 12c:	51 3e       	cpi	r21, 0xE1	; 225
 12e:	00 7c       	andi	r16, 0xC0	; 192
 130:	12 11       	cpse	r17, r2
 132:	12 7c       	andi	r17, 0xC2	; 194
 134:	00 7f       	andi	r16, 0xF0	; 240
 136:	49 49       	sbci	r20, 0x99	; 153
 138:	49 36       	cpi	r20, 0x69	; 105
 13a:	00 3e       	cpi	r16, 0xE0	; 224
 13c:	41 41       	sbci	r20, 0x11	; 17
 13e:	41 22       	and	r4, r17
 140:	00 7f       	andi	r16, 0xF0	; 240
 142:	41 41       	sbci	r20, 0x11	; 17
 144:	22 1c       	adc	r2, r2
 146:	00 7f       	andi	r16, 0xF0	; 240
 148:	49 49       	sbci	r20, 0x99	; 153
 14a:	49 41       	sbci	r20, 0x19	; 25
 14c:	00 7f       	andi	r16, 0xF0	; 240
 14e:	09 09       	sbc	r16, r9
 150:	09 01       	movw	r0, r18
 152:	00 3e       	cpi	r16, 0xE0	; 224
 154:	41 49       	sbci	r20, 0x91	; 145
 156:	49 7a       	andi	r20, 0xA9	; 169
 158:	00 7f       	andi	r16, 0xF0	; 240
 15a:	08 08       	sbc	r0, r8
 15c:	08 7f       	andi	r16, 0xF8	; 248
 15e:	00 00       	nop
 160:	41 7f       	andi	r20, 0xF1	; 241
 162:	41 00       	.word	0x0041	; ????
 164:	00 20       	and	r0, r0
 166:	40 41       	sbci	r20, 0x10	; 16
 168:	3f 01       	movw	r6, r30
 16a:	00 7f       	andi	r16, 0xF0	; 240
 16c:	08 14       	cp	r0, r8
 16e:	22 41       	sbci	r18, 0x12	; 18
 170:	00 7f       	andi	r16, 0xF0	; 240
 172:	40 40       	sbci	r20, 0x00	; 0
 174:	40 40       	sbci	r20, 0x00	; 0
 176:	00 7f       	andi	r16, 0xF0	; 240
 178:	02 0c       	add	r0, r2
 17a:	02 7f       	andi	r16, 0xF2	; 242
 17c:	00 7f       	andi	r16, 0xF0	; 240
 17e:	04 08       	sbc	r0, r4
 180:	10 7f       	andi	r17, 0xF0	; 240
 182:	00 3e       	cpi	r16, 0xE0	; 224
 184:	41 41       	sbci	r20, 0x11	; 17
 186:	41 3e       	cpi	r20, 0xE1	; 225
 188:	00 7f       	andi	r16, 0xF0	; 240
 18a:	09 09       	sbc	r16, r9
 18c:	09 06       	cpc	r0, r25
 18e:	00 3e       	cpi	r16, 0xE0	; 224
 190:	41 51       	subi	r20, 0x11	; 17
 192:	21 5e       	subi	r18, 0xE1	; 225
 194:	00 7f       	andi	r16, 0xF0	; 240
 196:	09 19       	sub	r16, r9
 198:	29 46       	sbci	r18, 0x69	; 105
 19a:	00 46       	sbci	r16, 0x60	; 96
 19c:	49 49       	sbci	r20, 0x99	; 153
 19e:	49 31       	cpi	r20, 0x19	; 25
 1a0:	00 01       	movw	r0, r0
 1a2:	01 7f       	andi	r16, 0xF1	; 241
 1a4:	01 01       	movw	r0, r2
 1a6:	00 3f       	cpi	r16, 0xF0	; 240
 1a8:	40 40       	sbci	r20, 0x00	; 0
 1aa:	40 3f       	cpi	r20, 0xF0	; 240
 1ac:	00 1f       	adc	r16, r16
 1ae:	20 40       	sbci	r18, 0x00	; 0
 1b0:	20 1f       	adc	r18, r16
 1b2:	00 3f       	cpi	r16, 0xF0	; 240
 1b4:	40 38       	cpi	r20, 0x80	; 128
 1b6:	40 3f       	cpi	r20, 0xF0	; 240
 1b8:	00 63       	ori	r16, 0x30	; 48
 1ba:	14 08       	sbc	r1, r4
 1bc:	14 63       	ori	r17, 0x34	; 52
 1be:	00 07       	cpc	r16, r16
 1c0:	08 70       	andi	r16, 0x08	; 8
 1c2:	08 07       	cpc	r16, r24
 1c4:	00 61       	ori	r16, 0x10	; 16
 1c6:	51 49       	sbci	r21, 0x91	; 145
 1c8:	45 43       	sbci	r20, 0x35	; 53
 1ca:	00 00       	nop
 1cc:	7f 41       	sbci	r23, 0x1F	; 31
 1ce:	41 00       	.word	0x0041	; ????
 1d0:	00 55       	subi	r16, 0x50	; 80
 1d2:	2a 55       	subi	r18, 0x5A	; 90
 1d4:	2a 55       	subi	r18, 0x5A	; 90
 1d6:	00 00       	nop
 1d8:	41 41       	sbci	r20, 0x11	; 17
 1da:	7f 00       	.word	0x007f	; ????
 1dc:	00 04       	cpc	r0, r0
 1de:	02 01       	movw	r0, r4
 1e0:	02 04       	cpc	r0, r2
 1e2:	00 40       	sbci	r16, 0x00	; 0
 1e4:	40 40       	sbci	r20, 0x00	; 0
 1e6:	40 40       	sbci	r20, 0x00	; 0
 1e8:	00 00       	nop
 1ea:	01 02       	muls	r16, r17
 1ec:	04 00       	.word	0x0004	; ????
 1ee:	00 20       	and	r0, r0
 1f0:	54 54       	subi	r21, 0x44	; 68
 1f2:	54 78       	andi	r21, 0x84	; 132
 1f4:	00 7f       	andi	r16, 0xF0	; 240
 1f6:	48 44       	sbci	r20, 0x48	; 72
 1f8:	44 38       	cpi	r20, 0x84	; 132
 1fa:	00 38       	cpi	r16, 0x80	; 128
 1fc:	44 44       	sbci	r20, 0x44	; 68
 1fe:	44 20       	and	r4, r4
 200:	00 38       	cpi	r16, 0x80	; 128
 202:	44 44       	sbci	r20, 0x44	; 68
 204:	48 7f       	andi	r20, 0xF8	; 248
 206:	00 38       	cpi	r16, 0x80	; 128
 208:	54 54       	subi	r21, 0x44	; 68
 20a:	54 18       	sub	r5, r4
 20c:	00 08       	sbc	r0, r0
 20e:	7e 09       	sbc	r23, r14
 210:	01 02       	muls	r16, r17
 212:	00 18       	sub	r0, r0
 214:	a4 a4       	ldd	r10, Z+44	; 0x2c
 216:	a4 7c       	andi	r26, 0xC4	; 196
 218:	00 7f       	andi	r16, 0xF0	; 240
 21a:	08 04       	cpc	r0, r8
 21c:	04 78       	andi	r16, 0x84	; 132
 21e:	00 00       	nop
 220:	44 7d       	andi	r20, 0xD4	; 212
 222:	40 00       	.word	0x0040	; ????
 224:	00 40       	sbci	r16, 0x00	; 0
 226:	80 84       	ldd	r8, Z+8	; 0x08
 228:	7d 00       	.word	0x007d	; ????
 22a:	00 7f       	andi	r16, 0xF0	; 240
 22c:	10 28       	or	r1, r0
 22e:	44 00       	.word	0x0044	; ????
 230:	00 00       	nop
 232:	41 7f       	andi	r20, 0xF1	; 241
 234:	40 00       	.word	0x0040	; ????
 236:	00 7c       	andi	r16, 0xC0	; 192
 238:	04 18       	sub	r0, r4
 23a:	04 78       	andi	r16, 0x84	; 132
 23c:	00 7c       	andi	r16, 0xC0	; 192
 23e:	08 04       	cpc	r0, r8
 240:	04 78       	andi	r16, 0x84	; 132
 242:	00 38       	cpi	r16, 0x80	; 128
 244:	44 44       	sbci	r20, 0x44	; 68
 246:	44 38       	cpi	r20, 0x84	; 132
 248:	00 fc       	sbrc	r0, 0
 24a:	24 24       	eor	r2, r4
 24c:	24 18       	sub	r2, r4
 24e:	00 18       	sub	r0, r0
 250:	24 24       	eor	r2, r4
 252:	18 fc       	.word	0xfc18	; ????
 254:	00 7c       	andi	r16, 0xC0	; 192
 256:	08 04       	cpc	r0, r8
 258:	04 08       	sbc	r0, r4
 25a:	00 48       	sbci	r16, 0x80	; 128
 25c:	54 54       	subi	r21, 0x44	; 68
 25e:	54 20       	and	r5, r4
 260:	00 04       	cpc	r0, r0
 262:	3f 44       	sbci	r19, 0x4F	; 79
 264:	40 20       	and	r4, r0
 266:	00 3c       	cpi	r16, 0xC0	; 192
 268:	40 40       	sbci	r20, 0x00	; 0
 26a:	20 7c       	andi	r18, 0xC0	; 192
 26c:	00 1c       	adc	r0, r0
 26e:	20 40       	sbci	r18, 0x00	; 0
 270:	20 1c       	adc	r2, r0
 272:	00 3c       	cpi	r16, 0xC0	; 192
 274:	40 30       	cpi	r20, 0x00	; 0
 276:	40 3c       	cpi	r20, 0xC0	; 192
 278:	00 44       	sbci	r16, 0x40	; 64
 27a:	28 10       	cpse	r2, r8
 27c:	28 44       	sbci	r18, 0x48	; 72
 27e:	00 1c       	adc	r0, r0
 280:	a0 a0       	ldd	r10, Z+32	; 0x20
 282:	a0 7c       	andi	r26, 0xC0	; 192
 284:	00 44       	sbci	r16, 0x40	; 64
 286:	64 54       	subi	r22, 0x44	; 68
 288:	4c 44       	sbci	r20, 0x4C	; 76
 28a:	00 00       	nop
 28c:	08 77       	andi	r16, 0x78	; 120
 28e:	41 00       	.word	0x0041	; ????
 290:	00 00       	nop
 292:	00 63       	ori	r16, 0x30	; 48
 294:	00 00       	nop
 296:	00 00       	nop
 298:	41 77       	andi	r20, 0x71	; 113
 29a:	08 00       	.word	0x0008	; ????
 29c:	00 08       	sbc	r0, r0
 29e:	04 08       	sbc	r0, r4
 2a0:	08 04       	cpc	r0, r8
 2a2:	00 3d       	cpi	r16, 0xD0	; 208
 2a4:	40 40       	sbci	r20, 0x00	; 0
 2a6:	20 7d       	andi	r18, 0xD0	; 208
 2a8:	00 3d       	cpi	r16, 0xD0	; 208
 2aa:	40 40       	sbci	r20, 0x00	; 0
 2ac:	40 3d       	cpi	r20, 0xD0	; 208
 2ae:	00 21       	and	r16, r0
 2b0:	54 54       	subi	r21, 0x44	; 68
 2b2:	54 79       	andi	r21, 0x94	; 148
 2b4:	00 7d       	andi	r16, 0xD0	; 208
 2b6:	12 11       	cpse	r17, r2
 2b8:	12 7d       	andi	r17, 0xD2	; 210
 2ba:	00 39       	cpi	r16, 0x90	; 144
 2bc:	44 44       	sbci	r20, 0x44	; 68
 2be:	44 39       	cpi	r20, 0x94	; 148
 2c0:	00 3d       	cpi	r16, 0xD0	; 208
 2c2:	42 42       	sbci	r20, 0x22	; 34
 2c4:	42 3d       	cpi	r20, 0xD2	; 210
 2c6:	00 02       	muls	r16, r16
 2c8:	05 02       	muls	r16, r21
 2ca:	00 00       	nop
 2cc:	00 7e       	andi	r16, 0xE0	; 224
 2ce:	01 49       	sbci	r16, 0x91	; 145
 2d0:	55 73       	andi	r21, 0x35	; 53

000002d2 <bitmap_58>:
	...
 2e2:	38 7c fe fe fe fc 7c 10 00 80 80 c0 80 80 80 00     8|....|.........
 2f2:	07 1f 1f 1f 1f 1f 0f 02                             ........

000002fa <bitmap_57>:
 2fa:	00 80 80 c0 c0 c0 c0 c0 c0 80 80 00 fe ff 3f 1f     ..............?.
 30a:	1f 1f 1f 1f 1f 1f ff ff 1f 3f 60 60 60 60 60 60     .........?``````
 31a:	60 60 ff ff 02 fc e0 e0 e0 e0 e0 e0 e0 e0 ff ff     ``..............
 32a:	00 0f 07 0f 0f 0f 0f 0f 0f 0f 0f 07                 ............

00000336 <bitmap_56>:
 336:	00 00 80 80 c0 c0 c0 c0 c0 c0 80 80 00 fc ff 3f     ...............?
 346:	3f 3f 3f 3f 3f 3f 3f 3f ff ff c7 ff 30 30 30 30     ????????....0000
 356:	30 30 30 30 30 ff cf ff ff e0 e0 e0 e0 e0 e0 e0     00000...........
 366:	e0 e0 ff ff 01 07 0f 0f 0f 0f 0f 0f 0f 0f 0f 07     ................
 376:	03                                                  .

00000377 <bitmap_55>:
 377:	c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 ff 7f 3f 3f     ..............??
 387:	3f 3f 3f 3f 3f 3f ff ff 01 00 00 00 00 00 00 e0     ??????..........
 397:	78 1f 03 00 00 00 00 80 f0 7c 0f 03 00 00 00 00     x........|......
 3a7:	00 00 0e 0f 01 00 00 00 00 00 00 00                 ............

000003b3 <bitmap_54>:
 3b3:	00 80 80 c0 c0 c0 c0 c0 80 80 c0 c0 fe ff 3f 1f     ..............?.
 3c3:	1f 1f 1f 1f 1f 3f ff ff ff ff 30 10 18 18 18 18     .....?....0.....
 3d3:	18 10 31 e1 ff ff e0 e0 e0 e0 e0 e0 e0 e0 f0 ff     ..1.............
 3e3:	01 07 0f 0f 0f 0f 0f 0f 0f 0f 07 07                 ............

000003ef <bitmap_53>:
 3ef:	00 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 c0 00 ff 3f 1f     ..............?.
 3ff:	1f 1f 1f 1f 1f 1f ff ff 00 3f 10 18 18 18 18 18     .........?......
 40f:	18 18 f0 e0 fc fc e0 e0 e0 e0 e0 e0 e0 e0 ff ff     ................
 41f:	0f 0f 07 0f 0f 0f 0f 0f 0f 0f 07 03                 ............

0000042b <bitmap_52>:
 42b:	00 00 00 00 c0 c0 c0 c0 c0 c0 c0 c0 c0 00 00 00     ................
 43b:	00 00 00 00 1f df ff 3f 1f ff 1f 1f 1f 00 00 00     .......?........
 44b:	80 c0 f0 9c 87 83 80 80 80 ff 80 80 80 80 f0 80     ................
 45b:	00 01 01 01 01 01 e1 e1 e1 ff ff e1 e1 e1 0f 0f     ................
 46b:	00 00 00 00 00 00 0f 0f 0f 0f 0f 0f 0f 0f 00 00     ................

0000047b <bitmap_51>:
 47b:	c0 c0 00 80 80 c0 c0 c0 c0 c0 80 80 ff ff 3f 3f     ..............??
 48b:	3f 3f 3f 3f 3f 3f 3f ff 00 00 00 00 30 30 30 30     ???????.....0000
 49b:	30 30 78 cf fc fc e0 e0 e0 e0 e0 e0 e0 e0 e0 ff     00x.............
 4ab:	0f 0f 07 0f 0f 0f 0f 0f 0f 0f 07 07                 ............

000004b7 <bitmap_50>:
 4b7:	c0 c0 80 80 c0 c0 c0 c0 c0 80 80 80 ff ff 3f 3f     ..............??
 4c7:	3f 3f 3f 3f 3f 3f 3f ff 01 01 80 80 c0 40 60 60     ???????......@``
 4d7:	30 30 18 0f f8 ff e3 e0 e0 e0 e0 e0 e0 f0 f0 fe     00..............
 4e7:	07 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f                 ............

000004f3 <bitmap_49>:
 4f3:	00 00 00 00 00 c0 c0 00 00 00 00 7f 7f 7f 7f 7f     ................
 503:	ff ff 00 00 00 00 00 00 00 00 00 ff ff 00 00 00     ................
 513:	00 e0 e0 e0 e0 e0 ff ff e0 e0 e0 e0 0f 0f 0f 0f     ................
 523:	0f 0f 0f 0f 0f 0f 0f                                .......

0000052a <bitmap_48>:
 52a:	00 00 80 80 c0 c0 c0 c0 c0 c0 80 80 00 fe ff 7f     ................
 53a:	3f 3f 3f 3f 3f 3f 3f 3f ff ff ff ff 00 00 00 00     ????????........
 54a:	00 00 00 00 00 00 ff ff ff f0 f0 f0 f0 f0 f0 f0     ................
 55a:	f0 f0 f8 ff 01 07 0f 0f 0f 0f 0f 0f 0f 0f 0f 07     ................
 56a:	03                                                  .

0000056b <init_sequence>:
 56b:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
 57b:	00 d5 f0 d9 22 da 12 db 20 8d 14                    ...."... ..

00000586 <__ctors_end>:
 586:	11 24       	eor	r1, r1
 588:	1f be       	out	0x3f, r1	; 63
 58a:	cf ef       	ldi	r28, 0xFF	; 255
 58c:	d8 e0       	ldi	r29, 0x08	; 8
 58e:	de bf       	out	0x3e, r29	; 62
 590:	cd bf       	out	0x3d, r28	; 61

00000592 <__do_copy_data>:
 592:	11 e0       	ldi	r17, 0x01	; 1
 594:	a0 e0       	ldi	r26, 0x00	; 0
 596:	b1 e0       	ldi	r27, 0x01	; 1
 598:	e0 e5       	ldi	r30, 0x50	; 80
 59a:	fc e0       	ldi	r31, 0x0C	; 12
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__do_copy_data+0x10>
 59e:	05 90       	lpm	r0, Z+
 5a0:	0d 92       	st	X+, r0
 5a2:	ae 34       	cpi	r26, 0x4E	; 78
 5a4:	b1 07       	cpc	r27, r17
 5a6:	d9 f7       	brne	.-10     	; 0x59e <__do_copy_data+0xc>

000005a8 <__do_clear_bss>:
 5a8:	21 e0       	ldi	r18, 0x01	; 1
 5aa:	ae e4       	ldi	r26, 0x4E	; 78
 5ac:	b1 e0       	ldi	r27, 0x01	; 1
 5ae:	01 c0       	rjmp	.+2      	; 0x5b2 <.do_clear_bss_start>

000005b0 <.do_clear_bss_loop>:
 5b0:	1d 92       	st	X+, r1

000005b2 <.do_clear_bss_start>:
 5b2:	a7 35       	cpi	r26, 0x57	; 87
 5b4:	b2 07       	cpc	r27, r18
 5b6:	e1 f7       	brne	.-8      	; 0x5b0 <.do_clear_bss_loop>
 5b8:	0e 94 bb 05 	call	0xb76	; 0xb76 <main>
 5bc:	0c 94 26 06 	jmp	0xc4c	; 0xc4c <_exit>

000005c0 <__bad_interrupt>:
 5c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000005c4 <i2c_init>:
*/
#include "i2c.h"
#include <avr/interrupt.h>

void i2c_init(void){
	LCD_PORT |= (1 << SDA_Pin)|(1 << SDC_Pin);		// experimental, pullups for 12c_bus
 5c4:	88 b1       	in	r24, 0x08	; 8
 5c6:	80 63       	ori	r24, 0x30	; 48
 5c8:	88 b9       	out	0x08, r24	; 8
	LCD_PORT_DDR |= (1 << SDA_Pin)|(1 << SDC_Pin);
 5ca:	87 b1       	in	r24, 0x07	; 7
 5cc:	80 63       	ori	r24, 0x30	; 48
 5ce:	87 b9       	out	0x07, r24	; 7
			break;
		case 64:
			TWSR = 0x3;
			break;
		default:
			TWSR = 0x00;
 5d0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
			break;
	}
	TWBR = (uint8_t)SET_TWBR;
 5d4:	80 e2       	ldi	r24, 0x20	; 32
 5d6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
	// enable
	TWCR = (1 << TWEN);
 5da:	84 e0       	ldi	r24, 0x04	; 4
 5dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 5e0:	08 95       	ret

000005e2 <lcd_send_i2c_start>:
}
void lcd_send_i2c_start(void){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
 5e2:	84 ea       	ldi	r24, 0xA4	; 164
 5e4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    while((TWCR & (1 << TWINT)) == 0);
 5e8:	ec eb       	ldi	r30, 0xBC	; 188
 5ea:	f0 e0       	ldi	r31, 0x00	; 0
 5ec:	80 81       	ld	r24, Z
 5ee:	88 23       	and	r24, r24
 5f0:	ec f7       	brge	.-6      	; 0x5ec <lcd_send_i2c_start+0xa>
    // send adress
    TWDR = LCD_I2C_ADDR;
 5f2:	88 e7       	ldi	r24, 0x78	; 120
 5f4:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    TWCR = (1 << TWINT)|( 1 << TWEN);
 5f8:	84 e8       	ldi	r24, 0x84	; 132
 5fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    while((TWCR & (1 << TWINT)) == 0);
 5fe:	ec eb       	ldi	r30, 0xBC	; 188
 600:	f0 e0       	ldi	r31, 0x00	; 0
 602:	80 81       	ld	r24, Z
 604:	88 23       	and	r24, r24
 606:	ec f7       	brge	.-6      	; 0x602 <lcd_send_i2c_start+0x20>
}
 608:	08 95       	ret

0000060a <lcd_send_i2c_stop>:
void lcd_send_i2c_stop(void){
    // i2c stop
    TWCR = (1 << TWINT)|(1 << TWSTO)|(1 << TWEN);
 60a:	84 e9       	ldi	r24, 0x94	; 148
 60c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 610:	08 95       	ret

00000612 <lcd_send_i2c_byte>:
}
void lcd_send_i2c_byte(uint8_t byte){
    TWDR = byte;
 612:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    TWCR = (1 << TWINT)|( 1 << TWEN);
 616:	84 e8       	ldi	r24, 0x84	; 132
 618:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    while((TWCR & (1 << TWINT)) == 0);
 61c:	ec eb       	ldi	r30, 0xBC	; 188
 61e:	f0 e0       	ldi	r31, 0x00	; 0
 620:	80 81       	ld	r24, Z
 622:	88 23       	and	r24, r24
 624:	ec f7       	brge	.-6      	; 0x620 <lcd_send_i2c_byte+0xe>
 626:	08 95       	ret

00000628 <lcd_command>:
	lcd_put_bigc (char_addr[c2], 60, char_width[c2], CHAR_WIDTH, CHAR_HEIGHT);
	lcd_put_bigc (char_addr[10], 78, char_width[10], CHAR_WIDTH, CHAR_HEIGHT);
	lcd_put_bigc (char_addr[c1], 85, char_width[c1], CHAR_WIDTH, CHAR_HEIGHT);
	lcd_put_bigc (char_addr[c0], 103, char_width[c0], CHAR_WIDTH, CHAR_HEIGHT);

}
 628:	ef 92       	push	r14
 62a:	ff 92       	push	r15
 62c:	0f 93       	push	r16
 62e:	1f 93       	push	r17
 630:	cf 93       	push	r28
 632:	df 93       	push	r29
 634:	7c 01       	movw	r14, r24
 636:	16 2f       	mov	r17, r22
 638:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <lcd_send_i2c_start>
 63c:	80 e0       	ldi	r24, 0x00	; 0
 63e:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 642:	11 23       	and	r17, r17
 644:	71 f0       	breq	.+28     	; 0x662 <lcd_command+0x3a>
 646:	e7 01       	movw	r28, r14
 648:	11 50       	subi	r17, 0x01	; 1
 64a:	01 2f       	mov	r16, r17
 64c:	10 e0       	ldi	r17, 0x00	; 0
 64e:	0f 5f       	subi	r16, 0xFF	; 255
 650:	1f 4f       	sbci	r17, 0xFF	; 255
 652:	0e 0d       	add	r16, r14
 654:	1f 1d       	adc	r17, r15
 656:	89 91       	ld	r24, Y+
 658:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 65c:	c0 17       	cp	r28, r16
 65e:	d1 07       	cpc	r29, r17
 660:	d1 f7       	brne	.-12     	; 0x656 <lcd_command+0x2e>
 662:	0e 94 05 03 	call	0x60a	; 0x60a <lcd_send_i2c_stop>
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	1f 91       	pop	r17
 66c:	0f 91       	pop	r16
 66e:	ff 90       	pop	r15
 670:	ef 90       	pop	r14
 672:	08 95       	ret

00000674 <lcd_data>:
 674:	ef 92       	push	r14
 676:	ff 92       	push	r15
 678:	0f 93       	push	r16
 67a:	1f 93       	push	r17
 67c:	cf 93       	push	r28
 67e:	7c 01       	movw	r14, r24
 680:	8b 01       	movw	r16, r22
 682:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <lcd_send_i2c_start>
 686:	80 e4       	ldi	r24, 0x40	; 64
 688:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 68c:	c0 e0       	ldi	r28, 0x00	; 0
 68e:	8c 2f       	mov	r24, r28
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	80 17       	cp	r24, r16
 694:	91 07       	cpc	r25, r17
 696:	60 f4       	brcc	.+24     	; 0x6b0 <lcd_data+0x3c>
 698:	f7 01       	movw	r30, r14
 69a:	e8 0f       	add	r30, r24
 69c:	f9 1f       	adc	r31, r25
 69e:	80 81       	ld	r24, Z
 6a0:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 6a4:	cf 5f       	subi	r28, 0xFF	; 255
 6a6:	8c 2f       	mov	r24, r28
 6a8:	90 e0       	ldi	r25, 0x00	; 0
 6aa:	80 17       	cp	r24, r16
 6ac:	91 07       	cpc	r25, r17
 6ae:	a0 f3       	brcs	.-24     	; 0x698 <lcd_data+0x24>
 6b0:	0e 94 05 03 	call	0x60a	; 0x60a <lcd_send_i2c_stop>
 6b4:	cf 91       	pop	r28
 6b6:	1f 91       	pop	r17
 6b8:	0f 91       	pop	r16
 6ba:	ff 90       	pop	r15
 6bc:	ef 90       	pop	r14
 6be:	08 95       	ret

000006c0 <lcd_gotoxy>:
 6c0:	cf 93       	push	r28
 6c2:	df 93       	push	r29
 6c4:	00 d0       	rcall	.+0      	; 0x6c6 <lcd_gotoxy+0x6>
 6c6:	00 d0       	rcall	.+0      	; 0x6c8 <lcd_gotoxy+0x8>
 6c8:	cd b7       	in	r28, 0x3d	; 61
 6ca:	de b7       	in	r29, 0x3e	; 62
 6cc:	81 38       	cpi	r24, 0x81	; 129
 6ce:	70 f4       	brcc	.+28     	; 0x6ec <lcd_gotoxy+0x2c>
 6d0:	68 30       	cpi	r22, 0x08	; 8
 6d2:	60 f4       	brcc	.+24     	; 0x6ec <lcd_gotoxy+0x2c>
 6d4:	60 55       	subi	r22, 0x50	; 80
 6d6:	69 83       	std	Y+1, r22	; 0x01
 6d8:	91 e2       	ldi	r25, 0x21	; 33
 6da:	9a 83       	std	Y+2, r25	; 0x02
 6dc:	8b 83       	std	Y+3, r24	; 0x03
 6de:	8f e7       	ldi	r24, 0x7F	; 127
 6e0:	8c 83       	std	Y+4, r24	; 0x04
 6e2:	64 e0       	ldi	r22, 0x04	; 4
 6e4:	ce 01       	movw	r24, r28
 6e6:	01 96       	adiw	r24, 0x01	; 1
 6e8:	0e 94 14 03 	call	0x628	; 0x628 <lcd_command>
 6ec:	0f 90       	pop	r0
 6ee:	0f 90       	pop	r0
 6f0:	0f 90       	pop	r0
 6f2:	0f 90       	pop	r0
 6f4:	df 91       	pop	r29
 6f6:	cf 91       	pop	r28
 6f8:	08 95       	ret

000006fa <lcd_home>:
 6fa:	60 e0       	ldi	r22, 0x00	; 0
 6fc:	80 e0       	ldi	r24, 0x00	; 0
 6fe:	0e 94 60 03 	call	0x6c0	; 0x6c0 <lcd_gotoxy>
 702:	08 95       	ret

00000704 <lcd_clrscr>:
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	0e 94 7d 03 	call	0x6fa	; 0x6fa <lcd_home>
 70c:	c0 e0       	ldi	r28, 0x00	; 0
 70e:	d4 e0       	ldi	r29, 0x04	; 4
 710:	61 e0       	ldi	r22, 0x01	; 1
 712:	70 e0       	ldi	r23, 0x00	; 0
 714:	81 e0       	ldi	r24, 0x01	; 1
 716:	90 e0       	ldi	r25, 0x00	; 0
 718:	0e 94 3a 03 	call	0x674	; 0x674 <lcd_data>
 71c:	21 97       	sbiw	r28, 0x01	; 1
 71e:	c1 f7       	brne	.-16     	; 0x710 <lcd_clrscr+0xc>
 720:	0e 94 7d 03 	call	0x6fa	; 0x6fa <lcd_home>
 724:	df 91       	pop	r29
 726:	cf 91       	pop	r28
 728:	08 95       	ret

0000072a <lcd_init>:
 72a:	1f 93       	push	r17
 72c:	cf 93       	push	r28
 72e:	df 93       	push	r29
 730:	cd b7       	in	r28, 0x3d	; 61
 732:	de b7       	in	r29, 0x3e	; 62
 734:	6c 97       	sbiw	r28, 0x1c	; 28
 736:	0f b6       	in	r0, 0x3f	; 63
 738:	f8 94       	cli
 73a:	de bf       	out	0x3e, r29	; 62
 73c:	0f be       	out	0x3f, r0	; 63
 73e:	cd bf       	out	0x3d, r28	; 61
 740:	18 2f       	mov	r17, r24
 742:	0e 94 e2 02 	call	0x5c4	; 0x5c4 <i2c_init>
 746:	eb e6       	ldi	r30, 0x6B	; 107
 748:	f5 e0       	ldi	r31, 0x05	; 5
 74a:	de 01       	movw	r26, r28
 74c:	11 96       	adiw	r26, 0x01	; 1
 74e:	9e 01       	movw	r18, r28
 750:	24 5e       	subi	r18, 0xE4	; 228
 752:	3f 4f       	sbci	r19, 0xFF	; 255
 754:	84 91       	lpm	r24, Z
 756:	8d 93       	st	X+, r24
 758:	31 96       	adiw	r30, 0x01	; 1
 75a:	a2 17       	cp	r26, r18
 75c:	b3 07       	cpc	r27, r19
 75e:	d1 f7       	brne	.-12     	; 0x754 <lcd_init+0x2a>
 760:	1c 8f       	std	Y+28, r17	; 0x1c
 762:	6c e1       	ldi	r22, 0x1C	; 28
 764:	ce 01       	movw	r24, r28
 766:	01 96       	adiw	r24, 0x01	; 1
 768:	0e 94 14 03 	call	0x628	; 0x628 <lcd_command>
 76c:	0e 94 82 03 	call	0x704	; 0x704 <lcd_clrscr>
 770:	6c 96       	adiw	r28, 0x1c	; 28
 772:	0f b6       	in	r0, 0x3f	; 63
 774:	f8 94       	cli
 776:	de bf       	out	0x3e, r29	; 62
 778:	0f be       	out	0x3f, r0	; 63
 77a:	cd bf       	out	0x3d, r28	; 61
 77c:	df 91       	pop	r29
 77e:	cf 91       	pop	r28
 780:	1f 91       	pop	r17
 782:	08 95       	ret

00000784 <lcd_putc>:
 784:	0f 93       	push	r16
 786:	1f 93       	push	r17
 788:	cf 93       	push	r28
 78a:	df 93       	push	r29
 78c:	c0 ee       	ldi	r28, 0xE0	; 224
 78e:	c8 0f       	add	r28, r24
 790:	c0 36       	cpi	r28, 0x60	; 96
 792:	00 f5       	brcc	.+64     	; 0x7d4 <lcd_putc+0x50>
 794:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <lcd_send_i2c_start>
 798:	80 e4       	ldi	r24, 0x40	; 64
 79a:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 79e:	cf 35       	cpi	r28, 0x5F	; 95
 7a0:	b8 f4       	brcc	.+46     	; 0x7d0 <lcd_putc+0x4c>
 7a2:	8c 2f       	mov	r24, r28
 7a4:	90 e0       	ldi	r25, 0x00	; 0
 7a6:	ec 01       	movw	r28, r24
 7a8:	cc 0f       	add	r28, r28
 7aa:	dd 1f       	adc	r29, r29
 7ac:	c8 0f       	add	r28, r24
 7ae:	d9 1f       	adc	r29, r25
 7b0:	cc 0f       	add	r28, r28
 7b2:	dd 1f       	adc	r29, r29
 7b4:	8e 01       	movw	r16, r28
 7b6:	08 59       	subi	r16, 0x98	; 152
 7b8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ba:	c2 59       	subi	r28, 0x92	; 146
 7bc:	df 4f       	sbci	r29, 0xFF	; 255
 7be:	f8 01       	movw	r30, r16
 7c0:	84 91       	lpm	r24, Z
 7c2:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 7c6:	0f 5f       	subi	r16, 0xFF	; 255
 7c8:	1f 4f       	sbci	r17, 0xFF	; 255
 7ca:	0c 17       	cp	r16, r28
 7cc:	1d 07       	cpc	r17, r29
 7ce:	b9 f7       	brne	.-18     	; 0x7be <lcd_putc+0x3a>
 7d0:	0e 94 05 03 	call	0x60a	; 0x60a <lcd_send_i2c_stop>
 7d4:	df 91       	pop	r29
 7d6:	cf 91       	pop	r28
 7d8:	1f 91       	pop	r17
 7da:	0f 91       	pop	r16
 7dc:	08 95       	ret

000007de <lcd_puts>:
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	ec 01       	movw	r28, r24
 7e4:	88 81       	ld	r24, Y
 7e6:	88 23       	and	r24, r24
 7e8:	31 f0       	breq	.+12     	; 0x7f6 <lcd_puts+0x18>
 7ea:	21 96       	adiw	r28, 0x01	; 1
 7ec:	0e 94 c2 03 	call	0x784	; 0x784 <lcd_putc>
 7f0:	89 91       	ld	r24, Y+
 7f2:	81 11       	cpse	r24, r1
 7f4:	fb cf       	rjmp	.-10     	; 0x7ec <lcd_puts+0xe>
 7f6:	df 91       	pop	r29
 7f8:	cf 91       	pop	r28
 7fa:	08 95       	ret

000007fc <lcd_set_contrast>:
 7fc:	cf 93       	push	r28
 7fe:	df 93       	push	r29
 800:	00 d0       	rcall	.+0      	; 0x802 <lcd_set_contrast+0x6>
 802:	cd b7       	in	r28, 0x3d	; 61
 804:	de b7       	in	r29, 0x3e	; 62
 806:	91 e8       	ldi	r25, 0x81	; 129
 808:	99 83       	std	Y+1, r25	; 0x01
 80a:	8a 83       	std	Y+2, r24	; 0x02
 80c:	62 e0       	ldi	r22, 0x02	; 2
 80e:	ce 01       	movw	r24, r28
 810:	01 96       	adiw	r24, 0x01	; 1
 812:	0e 94 14 03 	call	0x628	; 0x628 <lcd_command>
 816:	0f 90       	pop	r0
 818:	0f 90       	pop	r0
 81a:	df 91       	pop	r29
 81c:	cf 91       	pop	r28
 81e:	08 95       	ret

00000820 <lcd_put_bigc>:
 820:	2f 92       	push	r2
 822:	3f 92       	push	r3
 824:	4f 92       	push	r4
 826:	5f 92       	push	r5
 828:	6f 92       	push	r6
 82a:	7f 92       	push	r7
 82c:	8f 92       	push	r8
 82e:	9f 92       	push	r9
 830:	af 92       	push	r10
 832:	bf 92       	push	r11
 834:	cf 92       	push	r12
 836:	df 92       	push	r13
 838:	ef 92       	push	r14
 83a:	ff 92       	push	r15
 83c:	0f 93       	push	r16
 83e:	1f 93       	push	r17
 840:	cf 93       	push	r28
 842:	df 93       	push	r29
 844:	00 d0       	rcall	.+0      	; 0x846 <lcd_put_bigc+0x26>
 846:	00 d0       	rcall	.+0      	; 0x848 <lcd_put_bigc+0x28>
 848:	1f 92       	push	r1
 84a:	cd b7       	in	r28, 0x3d	; 61
 84c:	de b7       	in	r29, 0x3e	; 62
 84e:	e4 2e       	mov	r14, r20
 850:	f1 2c       	mov	r15, r1
 852:	a2 2e       	mov	r10, r18
 854:	b1 2c       	mov	r11, r1
 856:	ae 18       	sub	r10, r14
 858:	bf 08       	sbc	r11, r15
 85a:	b5 94       	asr	r11
 85c:	a7 94       	ror	r10
 85e:	3a 2c       	mov	r3, r10
 860:	06 95       	lsr	r16
 862:	06 95       	lsr	r16
 864:	06 95       	lsr	r16
 866:	09 83       	std	Y+1, r16	; 0x01
 868:	00 23       	and	r16, r16
 86a:	09 f4       	brne	.+2      	; 0x86e <lcd_put_bigc+0x4e>
 86c:	48 c0       	rjmp	.+144    	; 0x8fe <lcd_put_bigc+0xde>
 86e:	2a 83       	std	Y+2, r18	; 0x02
 870:	6b 83       	std	Y+3, r22	; 0x03
 872:	4c 01       	movw	r8, r24
 874:	27 01       	movw	r4, r14
 876:	61 2c       	mov	r6, r1
 878:	71 2c       	mov	r7, r1
 87a:	21 2c       	mov	r2, r1
 87c:	02 2f       	mov	r16, r18
 87e:	01 50       	subi	r16, 0x01	; 1
 880:	10 e0       	ldi	r17, 0x00	; 0
 882:	0f 5f       	subi	r16, 0xFF	; 255
 884:	1f 4f       	sbci	r17, 0xFF	; 255
 886:	bb 24       	eor	r11, r11
 888:	ea 0c       	add	r14, r10
 88a:	fb 1c       	adc	r15, r11
 88c:	23 94       	inc	r2
 88e:	62 2d       	mov	r22, r2
 890:	8b 81       	ldd	r24, Y+3	; 0x03
 892:	0e 94 60 03 	call	0x6c0	; 0x6c0 <lcd_gotoxy>
 896:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <lcd_send_i2c_start>
 89a:	80 e4       	ldi	r24, 0x40	; 64
 89c:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 8a0:	3a 81       	ldd	r19, Y+2	; 0x02
 8a2:	33 23       	and	r19, r19
 8a4:	29 f1       	breq	.+74     	; 0x8f0 <lcd_put_bigc+0xd0>
 8a6:	63 01       	movw	r12, r6
 8a8:	1d 82       	std	Y+5, r1	; 0x05
 8aa:	1c 82       	std	Y+4, r1	; 0x04
 8ac:	8c 81       	ldd	r24, Y+4	; 0x04
 8ae:	83 15       	cp	r24, r3
 8b0:	20 f4       	brcc	.+8      	; 0x8ba <lcd_put_bigc+0x9a>
 8b2:	80 e0       	ldi	r24, 0x00	; 0
 8b4:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 8b8:	13 c0       	rjmp	.+38     	; 0x8e0 <lcd_put_bigc+0xc0>
 8ba:	8c 81       	ldd	r24, Y+4	; 0x04
 8bc:	9d 81       	ldd	r25, Y+5	; 0x05
 8be:	8e 15       	cp	r24, r14
 8c0:	9f 05       	cpc	r25, r15
 8c2:	5c f4       	brge	.+22     	; 0x8da <lcd_put_bigc+0xba>
 8c4:	fc 01       	movw	r30, r24
 8c6:	ea 19       	sub	r30, r10
 8c8:	fb 09       	sbc	r31, r11
 8ca:	ec 0d       	add	r30, r12
 8cc:	fd 1d       	adc	r31, r13
 8ce:	e8 0d       	add	r30, r8
 8d0:	f9 1d       	adc	r31, r9
 8d2:	84 91       	lpm	r24, Z
 8d4:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 8d8:	03 c0       	rjmp	.+6      	; 0x8e0 <lcd_put_bigc+0xc0>
 8da:	80 e0       	ldi	r24, 0x00	; 0
 8dc:	0e 94 09 03 	call	0x612	; 0x612 <lcd_send_i2c_byte>
 8e0:	8c 81       	ldd	r24, Y+4	; 0x04
 8e2:	9d 81       	ldd	r25, Y+5	; 0x05
 8e4:	01 96       	adiw	r24, 0x01	; 1
 8e6:	9d 83       	std	Y+5, r25	; 0x05
 8e8:	8c 83       	std	Y+4, r24	; 0x04
 8ea:	80 17       	cp	r24, r16
 8ec:	91 07       	cpc	r25, r17
 8ee:	f1 f6       	brne	.-68     	; 0x8ac <lcd_put_bigc+0x8c>
 8f0:	0e 94 05 03 	call	0x60a	; 0x60a <lcd_send_i2c_stop>
 8f4:	64 0c       	add	r6, r4
 8f6:	75 1c       	adc	r7, r5
 8f8:	99 81       	ldd	r25, Y+1	; 0x01
 8fa:	29 12       	cpse	r2, r25
 8fc:	c7 cf       	rjmp	.-114    	; 0x88c <lcd_put_bigc+0x6c>
 8fe:	0f 90       	pop	r0
 900:	0f 90       	pop	r0
 902:	0f 90       	pop	r0
 904:	0f 90       	pop	r0
 906:	0f 90       	pop	r0
 908:	df 91       	pop	r29
 90a:	cf 91       	pop	r28
 90c:	1f 91       	pop	r17
 90e:	0f 91       	pop	r16
 910:	ff 90       	pop	r15
 912:	ef 90       	pop	r14
 914:	df 90       	pop	r13
 916:	cf 90       	pop	r12
 918:	bf 90       	pop	r11
 91a:	af 90       	pop	r10
 91c:	9f 90       	pop	r9
 91e:	8f 90       	pop	r8
 920:	7f 90       	pop	r7
 922:	6f 90       	pop	r6
 924:	5f 90       	pop	r5
 926:	4f 90       	pop	r4
 928:	3f 90       	pop	r3
 92a:	2f 90       	pop	r2
 92c:	08 95       	ret

0000092e <lcd_update_4>:


void lcd_update_4(uint8_t c3, uint8_t c2, uint8_t c1, uint8_t c0){
 92e:	ff 92       	push	r15
 930:	0f 93       	push	r16
 932:	1f 93       	push	r17
 934:	cf 93       	push	r28
 936:	df 93       	push	r29
 938:	f8 2e       	mov	r15, r24
 93a:	16 2f       	mov	r17, r22
 93c:	d4 2f       	mov	r29, r20
 93e:	c2 2f       	mov	r28, r18
	/*if(c3 == 0)
		lcd_clear_bigc(0); 
	else*/
	lcd_put_bigc(char_addr[10], 48, char_width[10], CHAR_WIDTH, CHAR_HEIGHT);
 940:	08 e2       	ldi	r16, 0x28	; 40
 942:	2e e1       	ldi	r18, 0x1E	; 30
 944:	48 e0       	ldi	r20, 0x08	; 8
 946:	60 e3       	ldi	r22, 0x30	; 48
 948:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_start+0x14>
 94c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_start+0x15>
 950:	0e 94 10 04 	call	0x820	; 0x820 <lcd_put_bigc>
	lcd_put_bigc (char_addr[c3], 0, char_width[c3], CHAR_WIDTH, CHAR_HEIGHT);
 954:	8f 2d       	mov	r24, r15
 956:	90 e0       	ldi	r25, 0x00	; 0
 958:	dc 01       	movw	r26, r24
 95a:	a5 5e       	subi	r26, 0xE5	; 229
 95c:	be 4f       	sbci	r27, 0xFE	; 254
 95e:	88 0f       	add	r24, r24
 960:	99 1f       	adc	r25, r25
 962:	fc 01       	movw	r30, r24
 964:	e0 50       	subi	r30, 0x00	; 0
 966:	ff 4f       	sbci	r31, 0xFF	; 255
 968:	2e e1       	ldi	r18, 0x1E	; 30
 96a:	4c 91       	ld	r20, X
 96c:	60 e0       	ldi	r22, 0x00	; 0
 96e:	80 81       	ld	r24, Z
 970:	91 81       	ldd	r25, Z+1	; 0x01
 972:	0e 94 10 04 	call	0x820	; 0x820 <lcd_put_bigc>
	lcd_put_bigc (char_addr[c2], 24, char_width[c2], CHAR_WIDTH, CHAR_HEIGHT);	
 976:	61 2f       	mov	r22, r17
 978:	70 e0       	ldi	r23, 0x00	; 0
 97a:	db 01       	movw	r26, r22
 97c:	a5 5e       	subi	r26, 0xE5	; 229
 97e:	be 4f       	sbci	r27, 0xFE	; 254
 980:	66 0f       	add	r22, r22
 982:	77 1f       	adc	r23, r23
 984:	fb 01       	movw	r30, r22
 986:	e0 50       	subi	r30, 0x00	; 0
 988:	ff 4f       	sbci	r31, 0xFF	; 255
 98a:	2e e1       	ldi	r18, 0x1E	; 30
 98c:	4c 91       	ld	r20, X
 98e:	68 e1       	ldi	r22, 0x18	; 24
 990:	80 81       	ld	r24, Z
 992:	91 81       	ldd	r25, Z+1	; 0x01
 994:	0e 94 10 04 	call	0x820	; 0x820 <lcd_put_bigc>
	lcd_put_bigc (char_addr[c1], 72, char_width[c1], CHAR_WIDTH, CHAR_HEIGHT);
 998:	4d 2f       	mov	r20, r29
 99a:	50 e0       	ldi	r21, 0x00	; 0
 99c:	da 01       	movw	r26, r20
 99e:	a5 5e       	subi	r26, 0xE5	; 229
 9a0:	be 4f       	sbci	r27, 0xFE	; 254
 9a2:	44 0f       	add	r20, r20
 9a4:	55 1f       	adc	r21, r21
 9a6:	fa 01       	movw	r30, r20
 9a8:	e0 50       	subi	r30, 0x00	; 0
 9aa:	ff 4f       	sbci	r31, 0xFF	; 255
 9ac:	2e e1       	ldi	r18, 0x1E	; 30
 9ae:	4c 91       	ld	r20, X
 9b0:	68 e4       	ldi	r22, 0x48	; 72
 9b2:	80 81       	ld	r24, Z
 9b4:	91 81       	ldd	r25, Z+1	; 0x01
 9b6:	0e 94 10 04 	call	0x820	; 0x820 <lcd_put_bigc>
	lcd_put_bigc (char_addr[c0], 96, char_width[c0], CHAR_WIDTH, CHAR_HEIGHT);
 9ba:	2c 2f       	mov	r18, r28
 9bc:	30 e0       	ldi	r19, 0x00	; 0
 9be:	d9 01       	movw	r26, r18
 9c0:	a5 5e       	subi	r26, 0xE5	; 229
 9c2:	be 4f       	sbci	r27, 0xFE	; 254
 9c4:	22 0f       	add	r18, r18
 9c6:	33 1f       	adc	r19, r19
 9c8:	f9 01       	movw	r30, r18
 9ca:	e0 50       	subi	r30, 0x00	; 0
 9cc:	ff 4f       	sbci	r31, 0xFF	; 255
 9ce:	2e e1       	ldi	r18, 0x1E	; 30
 9d0:	4c 91       	ld	r20, X
 9d2:	60 e6       	ldi	r22, 0x60	; 96
 9d4:	80 81       	ld	r24, Z
 9d6:	91 81       	ldd	r25, Z+1	; 0x01
 9d8:	0e 94 10 04 	call	0x820	; 0x820 <lcd_put_bigc>

}
 9dc:	df 91       	pop	r29
 9de:	cf 91       	pop	r28
 9e0:	1f 91       	pop	r17
 9e2:	0f 91       	pop	r16
 9e4:	ff 90       	pop	r15
 9e6:	08 95       	ret

000009e8 <__vector_11>:
uint8_t EEMEM EE_init_hour_one = 0; 
uint8_t EEMEM EE_init_min_ten = 0; 
uint8_t EEMEM EE_init_min_one = 0; 

/* Timer Interrupt */
ISR(TIMER1_COMPA_vect){
 9e8:	1f 92       	push	r1
 9ea:	0f 92       	push	r0
 9ec:	0f b6       	in	r0, 0x3f	; 63
 9ee:	0f 92       	push	r0
 9f0:	11 24       	eor	r1, r1
 9f2:	2f 93       	push	r18
 9f4:	3f 93       	push	r19
 9f6:	4f 93       	push	r20
 9f8:	5f 93       	push	r21
 9fa:	6f 93       	push	r22
 9fc:	7f 93       	push	r23
 9fe:	8f 93       	push	r24
 a00:	9f 93       	push	r25
 a02:	af 93       	push	r26
 a04:	bf 93       	push	r27
 a06:	ef 93       	push	r30
 a08:	ff 93       	push	r31

	msec++;
 a0a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <msec>
 a0e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <msec+0x1>
 a12:	01 96       	adiw	r24, 0x01	; 1
 a14:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <msec+0x1>
 a18:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <msec>

	if (msec == 4) {
 a1c:	04 97       	sbiw	r24, 0x04	; 4
 a1e:	09 f5       	brne	.+66     	; 0xa62 <__vector_11+0x7a>
		
		 OCR1A = timer_cal_val;  
 a20:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <timer_cal_val>
 a24:	90 91 1a 01 	lds	r25, 0x011A	; 0x80011a <timer_cal_val+0x1>
 a28:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 a2c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
		 TCCR1B = ((1 << WGM12) | timer_cal_div);
 a30:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <timer_cal_div>
 a34:	88 60       	ori	r24, 0x08	; 8
 a36:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		 TCNT1 = 0; 
 a3a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 a3e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
		 
		 if(update_lcd == 1){
 a42:	80 91 4e 01 	lds	r24, 0x014E	; 0x80014e <__data_end>
 a46:	81 30       	cpi	r24, 0x01	; 1
 a48:	61 f4       	brne	.+24     	; 0xa62 <__vector_11+0x7a>
		 	lcd_update_4(min_ten, min_one, sec_ten, sec_one); 
 a4a:	20 91 4f 01 	lds	r18, 0x014F	; 0x80014f <sec_one>
 a4e:	40 91 53 01 	lds	r20, 0x0153	; 0x800153 <sec_ten>
 a52:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <min_one>
 a56:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <min_ten>
 a5a:	0e 94 97 04 	call	0x92e	; 0x92e <lcd_update_4>
			update_lcd = 0; 
 a5e:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <__data_end>
			}
	}	

	if (msec == 5){	
 a62:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <msec>
 a66:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <msec+0x1>
 a6a:	05 97       	sbiw	r24, 0x05	; 5
 a6c:	09 f0       	breq	.+2      	; 0xa70 <__vector_11+0x88>
 a6e:	63 c0       	rjmp	.+198    	; 0xb36 <__vector_11+0x14e>
		OCR1A = timer_reg_val;
 a70:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <timer_reg_val>
 a74:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <timer_reg_val+0x1>
 a78:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 a7c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
		TCCR1B = ((1 << WGM12) | timer_reg_div);
 a80:	8d e0       	ldi	r24, 0x0D	; 13
 a82:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
		TCNT1 = 0;
 a86:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
 a8a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
	
		sec_one++; 
 a8e:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <sec_one>
 a92:	8f 5f       	subi	r24, 0xFF	; 255
 a94:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <sec_one>
		msec = 0; 
 a98:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <msec+0x1>
 a9c:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <msec>
		if (sec_one == 10){
 aa0:	8a 30       	cpi	r24, 0x0A	; 10
 aa2:	39 f4       	brne	.+14     	; 0xab2 <__vector_11+0xca>
			sec_ten++; 
 aa4:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <sec_ten>
 aa8:	8f 5f       	subi	r24, 0xFF	; 255
 aaa:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <sec_ten>
			sec_one=0;
 aae:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <sec_one>
		}
		
		if (sec_ten == 6) {min_one++; sec_ten=0;}
 ab2:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <sec_ten>
 ab6:	86 30       	cpi	r24, 0x06	; 6
 ab8:	39 f4       	brne	.+14     	; 0xac8 <__vector_11+0xe0>
 aba:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <min_one>
 abe:	8f 5f       	subi	r24, 0xFF	; 255
 ac0:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <min_one>
 ac4:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <sec_ten>
		if (min_one == 10) {min_ten++; min_one=0;}
 ac8:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <min_one>
 acc:	8a 30       	cpi	r24, 0x0A	; 10
 ace:	39 f4       	brne	.+14     	; 0xade <__vector_11+0xf6>
 ad0:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <min_ten>
 ad4:	8f 5f       	subi	r24, 0xFF	; 255
 ad6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <min_ten>
 ada:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <min_one>
		if (min_ten == 6) {hour_one++; min_ten=0;}
 ade:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <min_ten>
 ae2:	86 30       	cpi	r24, 0x06	; 6
 ae4:	39 f4       	brne	.+14     	; 0xaf4 <__vector_11+0x10c>
 ae6:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <hour_one>
 aea:	8f 5f       	subi	r24, 0xFF	; 255
 aec:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <hour_one>
 af0:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <min_ten>
		if (hour_one == 10) {hour_ten++; hour_one=0;}
 af4:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <hour_one>
 af8:	8a 30       	cpi	r24, 0x0A	; 10
 afa:	41 f4       	brne	.+16     	; 0xb0c <__vector_11+0x124>
 afc:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <hour_ten>
 b00:	8f 5f       	subi	r24, 0xFF	; 255
 b02:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <hour_ten>
 b06:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <hour_one>
 b0a:	12 c0       	rjmp	.+36     	; 0xb30 <__vector_11+0x148>
		if ((hour_ten == 2) & (hour_one == 4)) {
 b0c:	91 e0       	ldi	r25, 0x01	; 1
 b0e:	20 91 54 01 	lds	r18, 0x0154	; 0x800154 <hour_ten>
 b12:	22 30       	cpi	r18, 0x02	; 2
 b14:	09 f0       	breq	.+2      	; 0xb18 <__vector_11+0x130>
 b16:	90 e0       	ldi	r25, 0x00	; 0
 b18:	99 23       	and	r25, r25
 b1a:	51 f0       	breq	.+20     	; 0xb30 <__vector_11+0x148>
 b1c:	91 e0       	ldi	r25, 0x01	; 1
 b1e:	84 30       	cpi	r24, 0x04	; 4
 b20:	09 f0       	breq	.+2      	; 0xb24 <__vector_11+0x13c>
 b22:	90 e0       	ldi	r25, 0x00	; 0
 b24:	99 23       	and	r25, r25
 b26:	21 f0       	breq	.+8      	; 0xb30 <__vector_11+0x148>
			hour_ten = 0; 
 b28:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <hour_ten>
			hour_one = 0;
 b2c:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <hour_one>
		}
		update_lcd = 1; 
 b30:	81 e0       	ldi	r24, 0x01	; 1
 b32:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <__data_end>
	}
}
 b36:	ff 91       	pop	r31
 b38:	ef 91       	pop	r30
 b3a:	bf 91       	pop	r27
 b3c:	af 91       	pop	r26
 b3e:	9f 91       	pop	r25
 b40:	8f 91       	pop	r24
 b42:	7f 91       	pop	r23
 b44:	6f 91       	pop	r22
 b46:	5f 91       	pop	r21
 b48:	4f 91       	pop	r20
 b4a:	3f 91       	pop	r19
 b4c:	2f 91       	pop	r18
 b4e:	0f 90       	pop	r0
 b50:	0f be       	out	0x3f, r0	; 63
 b52:	0f 90       	pop	r0
 b54:	1f 90       	pop	r1
 b56:	18 95       	reti

00000b58 <lcd_clear_screen>:


// Main function
//  

void lcd_clear_screen(){
 b58:	cf 93       	push	r28

	for(uint8_t i = 0; i<8; i++) {
 b5a:	c0 e0       	ldi	r28, 0x00	; 0
		lcd_gotoxy(0, i); 
 b5c:	6c 2f       	mov	r22, r28
 b5e:	80 e0       	ldi	r24, 0x00	; 0
 b60:	0e 94 60 03 	call	0x6c0	; 0x6c0 <lcd_gotoxy>
		lcd_puts("                      "); 
 b64:	86 e2       	ldi	r24, 0x26	; 38
 b66:	91 e0       	ldi	r25, 0x01	; 1
 b68:	0e 94 ef 03 	call	0x7de	; 0x7de <lcd_puts>
// Main function
//  

void lcd_clear_screen(){

	for(uint8_t i = 0; i<8; i++) {
 b6c:	cf 5f       	subi	r28, 0xFF	; 255
 b6e:	c8 30       	cpi	r28, 0x08	; 8
 b70:	a9 f7       	brne	.-22     	; 0xb5c <lcd_clear_screen+0x4>
		lcd_gotoxy(0, i); 
		lcd_puts("                      "); 
	}

}
 b72:	cf 91       	pop	r28
 b74:	08 95       	ret

00000b76 <main>:

int main (void)
{
	/* Init OLED Display */
	
    lcd_init(LCD_DISP_ON);
 b76:	8f ea       	ldi	r24, 0xAF	; 175
 b78:	0e 94 95 03 	call	0x72a	; 0x72a <lcd_init>
    lcd_clear_screen(); 
 b7c:	0e 94 ac 05 	call	0xb58	; 0xb58 <lcd_clear_screen>
        
     /* put string to display (line 7) with linefeed */
    
	lcd_gotoxy(0,7); 
 b80:	67 e0       	ldi	r22, 0x07	; 7
 b82:	80 e0       	ldi	r24, 0x00	; 0
 b84:	0e 94 60 03 	call	0x6c0	; 0x6c0 <lcd_gotoxy>
	lcd_puts("IFSP Regular 40");
 b88:	8d e3       	ldi	r24, 0x3D	; 61
 b8a:	91 e0       	ldi	r25, 0x01	; 1
 b8c:	0e 94 ef 03 	call	0x7de	; 0x7de <lcd_puts>
	lcd_home();
 b90:	0e 94 7d 03 	call	0x6fa	; 0x6fa <lcd_home>
	lcd_set_contrast(196);
 b94:	84 ec       	ldi	r24, 0xC4	; 196
 b96:	0e 94 fe 03 	call	0x7fc	; 0x7fc <lcd_set_contrast>

	/* Read Timer Calibration Values from EEPROM */

	timer_cal_div = eeprom_read_byte(&EE_timer_cal_div); 
 b9a:	88 e0       	ldi	r24, 0x08	; 8
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	0e 94 08 06 	call	0xc10	; 0xc10 <eeprom_read_byte>
 ba2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <timer_cal_div>
	timer_cal_val = eeprom_read_word(&EE_timer_cal_val);
 ba6:	86 e0       	ldi	r24, 0x06	; 6
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	0e 94 10 06 	call	0xc20	; 0xc20 <eeprom_read_word>
 bae:	90 93 1a 01 	sts	0x011A, r25	; 0x80011a <timer_cal_val+0x1>
 bb2:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <timer_cal_val>
  	timer_reg_val = eeprom_read_word(&EE_timer_reg_val);
 bb6:	84 e0       	ldi	r24, 0x04	; 4
 bb8:	90 e0       	ldi	r25, 0x00	; 0
 bba:	0e 94 10 06 	call	0xc20	; 0xc20 <eeprom_read_word>
 bbe:	90 93 17 01 	sts	0x0117, r25	; 0x800117 <timer_reg_val+0x1>
 bc2:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <timer_reg_val>

	/* set Timer 1 for Clock Control */


	TCCR1B = ((1 << WGM12) | timer_reg_div);
 bc6:	8d e0       	ldi	r24, 0x0D	; 13
 bc8:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	OCR1A = timer_reg_val;
 bcc:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <timer_reg_val>
 bd0:	90 91 17 01 	lds	r25, 0x0117	; 0x800117 <timer_reg_val+0x1>
 bd4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 bd8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>


	/* Timer Interrupt Control*/
	TIMSK1 = (1 << OCIE1A); 
 bdc:	82 e0       	ldi	r24, 0x02	; 2
 bde:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>

	/* Global Interrupt Enable */ 
	sei();
 be2:	78 94       	sei

	/* Initialize time variables */ 
	sec_one = 7;
 be4:	97 e0       	ldi	r25, 0x07	; 7
 be6:	90 93 4f 01 	sts	0x014F, r25	; 0x80014f <sec_one>
	sec_ten = 2; 
 bea:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <sec_ten>

	min_ten = 3;
 bee:	83 e0       	ldi	r24, 0x03	; 3
 bf0:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <min_ten>
	min_one = 4;
 bf4:	84 e0       	ldi	r24, 0x04	; 4
 bf6:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <min_one>

	hour_ten = 0;
 bfa:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <hour_ten>
	hour_one = 0; 
 bfe:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <hour_one>

	/* Update LCD Display */ 

	lcd_update_4(min_ten, min_one, sec_ten, sec_one);  
 c02:	27 e0       	ldi	r18, 0x07	; 7
 c04:	42 e0       	ldi	r20, 0x02	; 2
 c06:	64 e0       	ldi	r22, 0x04	; 4
 c08:	83 e0       	ldi	r24, 0x03	; 3
 c0a:	0e 94 97 04 	call	0x92e	; 0x92e <lcd_update_4>
 c0e:	ff cf       	rjmp	.-2      	; 0xc0e <main+0x98>

00000c10 <eeprom_read_byte>:
 c10:	f9 99       	sbic	0x1f, 1	; 31
 c12:	fe cf       	rjmp	.-4      	; 0xc10 <eeprom_read_byte>
 c14:	92 bd       	out	0x22, r25	; 34
 c16:	81 bd       	out	0x21, r24	; 33
 c18:	f8 9a       	sbi	0x1f, 0	; 31
 c1a:	99 27       	eor	r25, r25
 c1c:	80 b5       	in	r24, 0x20	; 32
 c1e:	08 95       	ret

00000c20 <eeprom_read_word>:
 c20:	a8 e1       	ldi	r26, 0x18	; 24
 c22:	b0 e0       	ldi	r27, 0x00	; 0
 c24:	42 e0       	ldi	r20, 0x02	; 2
 c26:	50 e0       	ldi	r21, 0x00	; 0
 c28:	0c 94 18 06 	jmp	0xc30	; 0xc30 <eeprom_read_blraw>

00000c2c <eeprom_read_block>:
 c2c:	dc 01       	movw	r26, r24
 c2e:	cb 01       	movw	r24, r22

00000c30 <eeprom_read_blraw>:
 c30:	fc 01       	movw	r30, r24
 c32:	f9 99       	sbic	0x1f, 1	; 31
 c34:	fe cf       	rjmp	.-4      	; 0xc32 <eeprom_read_blraw+0x2>
 c36:	06 c0       	rjmp	.+12     	; 0xc44 <eeprom_read_blraw+0x14>
 c38:	f2 bd       	out	0x22, r31	; 34
 c3a:	e1 bd       	out	0x21, r30	; 33
 c3c:	f8 9a       	sbi	0x1f, 0	; 31
 c3e:	31 96       	adiw	r30, 0x01	; 1
 c40:	00 b4       	in	r0, 0x20	; 32
 c42:	0d 92       	st	X+, r0
 c44:	41 50       	subi	r20, 0x01	; 1
 c46:	50 40       	sbci	r21, 0x00	; 0
 c48:	b8 f7       	brcc	.-18     	; 0xc38 <eeprom_read_blraw+0x8>
 c4a:	08 95       	ret

00000c4c <_exit>:
 c4c:	f8 94       	cli

00000c4e <__stop_program>:
 c4e:	ff cf       	rjmp	.-2      	; 0xc4e <__stop_program>
