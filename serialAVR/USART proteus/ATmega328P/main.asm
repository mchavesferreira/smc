;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   seg nov 9 2015
; Processor: ATmega328P
; Compiler:  AVRASM (Proteus)
;====================================================================

;====================================================================
; DEFINITIONS
;====================================================================
.equ M1 = pb5 ;PINO13
.equ SP1 = pb0 ;PINO8
;====================================================================
; VARIABLES
;====================================================================
.def caixas = r0
;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================

      ; Reset Vector
      rjmp  Start

;====================================================================
; CODE SEGMENT
;====================================================================
.include "lib328Pv02.inc"
Start:
    cbi ddrb,0
	sbi portb,0 ;PUUL-UP NA PB0
	sbi ddrb,5

	rcall lcd_init	; Inicialização do LCD (VSS=GND VDD=5V VO=GND RS=PD2 RW=GND E=PD3 D4=PD4 D5=PD5 D6=PD6 D7=PD7 A=5V K=GND) 
	rcall lcd_clear	; Chama rotina limpar o LCD e posicionar na linha 0, coluna 0
	
	ldi lcd_col,3 ;define coluna3
	rcall lcd_lin0_col ;define linha 0
	
	ldi lcd_caracter,'C'			
	rcall lcd_write_caracter				
	ldi lcd_caracter,'A'
	rcall lcd_write_caracter
	ldi lcd_caracter,'R'
	rcall lcd_write_caracter
	ldi lcd_caracter,'R'
	rcall lcd_write_caracter
	ldi lcd_caracter,'E'
	rcall lcd_write_caracter
	ldi lcd_caracter,'G'
	rcall lcd_write_caracter
	ldi lcd_caracter,'A'
	rcall lcd_write_caracter
	ldi lcd_caracter,'N'
	rcall lcd_write_caracter
	ldi lcd_caracter,'D'
	rcall lcd_write_caracter
	ldi lcd_caracter,'O'
	rcall lcd_write_caracter
	
	ldi lcd_col,0 ; define coluna 0
	rcall lcd_lin1_col ; define linha 1,coluna 0
	
	ldi lcd_caracter,'C'			
	rcall lcd_write_caracter				
	ldi lcd_caracter,'A'
	rcall lcd_write_caracter
	ldi lcd_caracter,'I'
	rcall lcd_write_caracter
	ldi lcd_caracter,'X'
	rcall lcd_write_caracter
	ldi lcd_caracter,'A'
	rcall lcd_write_caracter
	ldi lcd_caracter,'S'
	rcall lcd_write_caracter
	ldi lcd_caracter,'='
	rcall lcd_write_caracter
	
	ldi aux,0				
	mov caixas,aux
	ldi lcd_col,7
	rcall lcd_lin1_col
	mov lcd_number,caixas
	rcall lcd_write_number

Loop:
	sbi portb,M1 ;liga o motor			
SP1_ON:
	sbic pinb,SP1 ;verifica se passou caixas			
	rjmp SP1_ON					
SP1_OFF:
	sbis pinb,SP1				
	rjmp SP1_OFF				
	
	inc caixas ; caixas=caixas+1					
	
	ldi lcd_col,7 ;atualiza o valor a patir da coluna 7
	rcall lcd_lin1_col ;selecina coluna 7, linha1
	mov lcd_number,caixas ; lcd_number=caixas
	rcall lcd_write_number ;atualiza o número no LCD
	
	ldi aux,12 ;aux =12				
	eor aux,caixas	;caixas = aux?			
	breq ALERTA	;se sim desvia para alerta, se não, volta para o loop				
	
	ldi delay_time,1			
	rcall delay_seconds
    rjmp  Loop

ALERTA:
	cbi portb,M1 	;desliga o motor			
	ldi lcd_col,3 ; define linha3
	rcall lcd_lin0_col ; define linha 0,couna 3
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,'P'
	rcall lcd_write_caracter
	ldi lcd_caracter,'R'
	rcall lcd_write_caracter
	ldi lcd_caracter,'O'
	rcall lcd_write_caracter
	ldi lcd_caracter,'N'
	rcall lcd_write_caracter
	ldi lcd_caracter,'T'
	rcall lcd_write_caracter
	ldi lcd_caracter,'O'
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi delay_time,1			
	rcall delay_seconds
	ldi lcd_col,3
	rcall lcd_lin0_col
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi lcd_caracter,' '
	rcall lcd_write_caracter
	ldi delay_time,1			
	rcall delay_seconds
	rjmp ALERTA
;====================================================================
